
name: lite release
on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]

jobs:
  linux_x64_release:
    if: "contains(github.event.head_commit.message, '*CI*') || startsWith(github.ref, 'refs/tags')"
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.version.outputs.version }}
      release: ${{ steps.release.outputs.release }}
    steps:
      - uses: actions/checkout@v2
      - name: setup build environment
        run: sudo apt install cmake clang libsdl2-dev
      - name: get application version
        id: version
        run: printf "::set-output name=version::%s\n" "$(cat cmake.toml | sed '/^version/!d' | tail -1 | sed 's/[ ]*version[ ]*=[ ]*//g;s/\"//g')"
      - name: release name
        id: release
        run: |
          branch=$(echo ${{github.ref}} | sed 's/refs\/\(heads\|tags\)\///g') && \
            release=$([[ "$branch" =~ v[0-9.]+ ]] && echo $branch || echo "$branch-${{ steps.version.outputs.version }}") && \
            echo "release_name=$release" && \
            printf "::set-output name=release::%s\n" "$release"
      - name: build application
        run: mkdir build && pushd build && cmake .. && make && cmake -E tar cf lite_linux_x64.tar.gz lite data
      - name: release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "build/lite_linux_x64.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}

  windows_release:
    if: "contains(github.event.head_commit.message, '*CI*') || startsWith(github.ref, 'refs/tags')"
    strategy:
      matrix:
        arch:
          - amd64
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: build lite
        run: |
          mkdir build
          cd build
          cmake -G "NMake Makefiles" .
          nmake
          cmake -E tar cf lite_win64.zip lite.exe SDL2.dll data
      - name: release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "build/lite_win64.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

